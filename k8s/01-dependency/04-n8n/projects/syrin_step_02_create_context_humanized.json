{
  "name": "syrin-step-02-create-context-humanized",
  "nodes": [
    {
      "parameters": {
        "queue": "02_syrin_notification_audio_process_categories",
        "options": {
          "parallelMessages": 1
        }
      },
      "type": "n8n-nodes-base.rabbitmqTrigger",
      "typeVersion": 1,
      "position": [
        -1560,
        -580
      ],
      "id": "e4c1ae45-738f-497b-8f77-688f71f86009",
      "name": "02_syrin_notification_audio_process_categories - RabbitMQ Trigger",
      "credentials": {
        "rabbitmq": {
          "id": "G3vzUbcAvacKyFsH",
          "name": "RabbitMQ account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Voc√™ √© um assistente que transforma alertas do Prometheus em mensagens faladas curtas, claras e naturais, como se uma pessoa estivesse avisando por alto-falante na empresa.\n\nGere uma √∫nica frase objetiva, com tom de aviso urgente, usando linguagem simples e natural ‚Äî como se algu√©m estivesse informando por voz no sistema de som.\n\nSiga estas orienta√ß√µes:\n\n1. **Comece identificando o alvo do problema**: pode ser um pod, servidor, inst√¢ncia ou IP.  \n   - Pegue essa informa√ß√£o de campos como `Summary:` ou qualquer trecho com `instance`, `pod`, `host`, `IP`.\n\n2. **Descreva o que est√° acontecendo** usando o conte√∫do de `Description:`.  \n   - Seja direto e claro (ex: ‚Äúest√° quase sem mem√≥ria‚Äù, ‚Äúest√° fora do ar‚Äù, ‚Äún√£o est√° respondendo‚Äù).\n\n3. Se houver o campo `tenancy`, inclua ele naturalmente na frase, como por exemplo:  \n   - ‚Äú...no ambiente mutantrogue‚Äù, ou  \n   - ‚Äú...no cliente mutantrogue‚Äù.\n\n4. Se houver alguma m√©trica ou valor claro (como `VALUE = 9.2`, ou ‚Äúuso acima de 90%‚Äù), mencione isso como refor√ßo da gravidade.\n\n5. Finalize dizendo:  \n   `\"Isso √© um alerta de [categoria]\"`  \n   Substitua `[categoria]` conforme a tabela:\n\n| Categoria              | Texto final da frase              |\n|------------------------|-----------------------------------|\n| instance-problem       | infraestrutura                   |\n| k8s-problem            | Kubernetes                        |\n| network-problem        | rede                              |\n| application-problem    | aplica√ß√£o                         |\n| unknown                | categoria desconhecida            |\n\n---\n\nDados do alerta:\n---\nTexto: {{ $json.content.parseJson().text }}\nCategoria: {{ $json.content.parseJson().category }}\n\n---\n\nRetorne apenas a frase final, com uma estrutura natural, falada e objetiva. Nunca use linguagem t√©cnica ou neutra demais. Priorize clareza, impacto e contexto.",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -1340,
        -580
      ],
      "id": "f747a1ed-723d-45f7-9b7f-5fdbb623ded8",
      "name": "AI Agent - audio",
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "queue": "02_syrin_notification_message_process_categories",
        "options": {
          "parallelMessages": 1
        }
      },
      "type": "n8n-nodes-base.rabbitmqTrigger",
      "typeVersion": 1,
      "position": [
        -1560,
        -300
      ],
      "id": "113f2fd7-9983-4df8-aeb0-e8dde4b1217b",
      "name": "02_syrin_notification_message_process_categories",
      "credentials": {
        "rabbitmq": {
          "id": "G3vzUbcAvacKyFsH",
          "name": "RabbitMQ account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "2067637854",
        "text": "={{ $json.content.parseJson().text.replace(/_/g, '\\\\_') }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -660,
        -300
      ],
      "id": "b71e6bd9-c134-4efc-a222-e18aaea57ec4",
      "name": "Telegram",
      "webhookId": "3417f125-964e-4def-8ce4-51764dd57349",
      "credentials": {
        "telegramApi": {
          "id": "3pxZakzwkzu6GJiz",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "queue": "03_syrin_notification_audio_process_tts",
        "sendInputData": false,
        "message": "={\"category\": \"{{ $('02_syrin_notification_audio_process_categories - RabbitMQ Trigger').item.json.content.parseJson().category }}\",\"text\": \"{{ $json.output.replace(/\"/g, '').replace(/\\\\n|\\\\r/g, '').trim() }}\",\"level\": \"{{ $('02_syrin_notification_audio_process_categories - RabbitMQ Trigger').item.json.content.parseJson().level }}\"}",
        "options": {}
      },
      "type": "n8n-nodes-base.rabbitmq",
      "typeVersion": 1.1,
      "position": [
        -960,
        -580
      ],
      "id": "ce557ae5-be1c-49b0-8bc3-5d1df4c1fce1",
      "name": "03_syrin_notification_audio_process_tts",
      "credentials": {
        "rabbitmq": {
          "id": "G3vzUbcAvacKyFsH",
          "name": "RabbitMQ account"
        }
      }
    },
    {
      "parameters": {
        "queue": "03_syrin_notification_message_process_send",
        "options": {
          "parallelMessages": 1
        }
      },
      "type": "n8n-nodes-base.rabbitmqTrigger",
      "typeVersion": 1,
      "position": [
        -660,
        -580
      ],
      "id": "72e2cf56-d73e-44fe-894e-f7c8f1c7116c",
      "name": "03_syrin_notification_message_process_send_telegram",
      "credentials": {
        "rabbitmq": {
          "id": "G3vzUbcAvacKyFsH",
          "name": "RabbitMQ account"
        }
      }
    },
    {
      "parameters": {
        "queue": "03_syrin_notification_message_process_send",
        "sendInputData": false,
        "message": "={\"category\": \"{{ $('02_syrin_notification_message_process_categories').item.json.content.parseJson().category }}\",\"text\": {{ $json.output.replace(/(?:\\r\\n|\\r|\\n)+$/, '').toJsonString().trim() }}, \"level\": \"{{ $('02_syrin_notification_message_process_categories').item.json.content.parseJson().level }}\"}",
        "options": {}
      },
      "type": "n8n-nodes-base.rabbitmq",
      "typeVersion": 1.1,
      "position": [
        -960,
        -300
      ],
      "id": "11035f1f-c135-4312-8f35-5f24c24f3e66",
      "name": "03_syrin_notification_message_process_send",
      "credentials": {
        "rabbitmq": {
          "id": "G3vzUbcAvacKyFsH",
          "name": "RabbitMQ account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Voc√™ √© um assistente que transforma alertas do Prometheus em mensagens t√©cnicas, formatadas para envio via Telegram usando Markdown.\n\nCom base nas informa√ß√µes abaixo, gere uma **mensagem clara, organizada e formatada**, com os seguintes campos:\n\n---\n\n1. **T√≠tulo:**\n`üîî *Syrin Alerta Prometheus*`\n\n2. **N√≠vel do alerta:**\n- `üî¥ *N√≠vel:* Cr√≠tico` ‚Üí para `Critical`\n- `üü† *N√≠vel:* Aviso` ‚Üí para `Warning`\n\n3. **Tipo do problema:** com base na categoria:\n- `instance-problem` ‚Üí `üìõ *Tipo:* Problema de infraestrutura`\n- `k8s-problem` ‚Üí `üìõ *Tipo:* Problema no Kubernetes`\n- `network-problem` ‚Üí `üìõ *Tipo:* Problema de rede`\n- `application-problem` ‚Üí `üìõ *Tipo:* Falha na aplica√ß√£o`\n- `unknown` ‚Üí `üìõ *Tipo:* Categoria n√£o identificada`\n\n4. **Inst√¢ncia, pod ou servi√ßo afetado:**\nBusque por valores como:\n- `instance`, `nodename`, `pod`, `node`, `namespace`\n- Veja com aten√ß√£o nos values de Description e Summary\nExemplo: `üìç *Inst√¢ncia:* cj-clean-delete-pods-restarted-29164740-sx6md`\n\n5. **Detalhe do alerta:**\nDescreva o evento principal de forma clara e direta.\nExemplo: `üìù *Detalhe:* Pod est√° em estado n√£o saud√°vel h√° mais de 15 minutos`\n\n6. **M√©trica ou causa prov√°vel:**\nSe dispon√≠vel, extraia valores como `VALUE`, `LABELS`, ou trechos como `IO Wait acima de 80%`  \nExemplo: `üìä *M√©trica:* VALUE = 1`\n\n7. **Ambiente (detec√ß√£o por sigla conhecida):**\n- TENHA MUITA ATEN√á√ÉO NESTAS ETAPAS ABAIXO\n- Procure **as seguintes siglas de ambiente** no conte√∫do do campo `Environment:` ou `Kubernetes:`:  \n  `PRD`, `HML`, `STG`, `DEV`, `QA`, `POC`, `DR`\n- A primeira sigla encontrada ser√° considerada o ambiente (ex: `PRD`)\n- Em seguida:\n  - Pegue o valor completo do campo `Tenancy:` (ex: mutantrogue)\n  - Pegue o valor completo do campo `Kubernetes:` (ex: OKE_PRD_MULTICLIENTVOZ_ROGUE)\n- Combine tudo no seguinte formato:\n  ```\n  üåé *Ambiente:* PRD (mutantrogue - OKE_PRD_MULTICLIENTVOZ_ROGUE)\n  ```\n- Se n√£o encontrar a sigla, o tenancy ou o cluster, retorne:\n  ```\n  üåé *Ambiente:* (n√£o identificado)\n  ```\n- **N√£o invente dados se algum estiver ausente.**\n  ```\n\n8. **Express√£o Prometheus (condicional):**\n- Se o alerta contiver uma express√£o **v√°lida de m√©trica Prometheus** como `rate(...)`, `irate(...)`, `avg_over_time(...)`, etc.,  \nadicione ao final a seguinte linha:\n```\n‚è±Ô∏è Este alerta foi gerado automaticamente via Prometheus com base na m√©trica: <m√©trica encontrada>\n```\n- **Se n√£o houver m√©trica identific√°vel, n√£o inclua essa linha.**\n\n---\n\nFormato da mensagem final (exemplo):\nüîî *Syrin Alerta Prometheus*\n\nüî¥ *N√≠vel:* Cr√≠tico  \nüìõ *Tipo:* Problema no Kubernetes  \nüìç *Inst√¢ncia:* cj-clean-delete-pods-restarted-29164740-sx6md  \nüìù *Detalhe:* Pod est√° em estado n√£o saud√°vel h√° mais de 15 minutos  \nüìä *M√©trica:* VALUE = 1  \nüåé *Ambiente:* PRD (mutantrogue - OKE_PRD_MULTICLIENT_ROGUE)\n\n‚è±Ô∏è Este alerta foi gerado automaticamente via Prometheus com base na m√©trica: rate(...)\n\nUse apenas os dados fornecidos abaixo. N√£o inclua explica√ß√µes, coment√°rios, nem exemplos. Nunca invente dados ausentes.\n\n---\n\n**Dados do alerta:**\n```\nTexto: {{ $json.content.parseJson().text }}\nCategoria: {{ $json.content.parseJson().category }}\nLevel: {{ $json.content.parseJson().level }}\n```\n\n---\n\nRetorne somente a mensagem final formatada para Telegram. N√£o inclua explica√ß√µes ou exemplos.\n",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -1340,
        -300
      ],
      "id": "de562bab-89ce-47c0-b6d4-861d5f3e353f",
      "name": "AI Agent - msg",
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "model": "gemma2:9b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -1380,
        -420
      ],
      "id": "97eef21a-881b-4554-9b63-5677ddd1df04",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "FiFqO2yGp7toMFkX",
          "name": "Ollama account - GPU"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "02_syrin_notification_audio_process_categories - RabbitMQ Trigger": {
      "main": [
        [
          {
            "node": "AI Agent - audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent - audio": {
      "main": [
        [
          {
            "node": "03_syrin_notification_audio_process_tts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "02_syrin_notification_message_process_categories": {
      "main": [
        [
          {
            "node": "AI Agent - msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "03_syrin_notification_message_process_send_telegram": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent - msg": {
      "main": [
        [
          {
            "node": "03_syrin_notification_message_process_send",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent - audio",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "AI Agent - msg",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Sao_Paulo",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "50e4ee6c-8286-4f2f-aeef-ec8c7aba5d19",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "66a3c10f0a6579f8f080184ed59b4d630266bf0739abc44951b886256ef7409e"
  },
  "id": "8DvqIycJnePoR8pV",
  "tags": []
}